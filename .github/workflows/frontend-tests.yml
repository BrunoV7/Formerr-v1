name: Frontend Tests

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'
  pull_request:
    paths:
      - 'frontend/**'

env:
  NODE_VERSION: '18'

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Lint check
      run: npm run lint

    - name: Type checking
      run: npm run type-check

    - name: Run unit tests
      run: npm run test:unit
      env:
        CI: true

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

    - name: Build Docker image
      run: |
        docker build -t formerr-frontend:test .
        
    - name: Test Docker image
      run: |
        # Start container
        docker run -d --name test-frontend -p 3000:3000 formerr-frontend:test
        
        # Wait for container to be ready
        sleep 10
        
        # Test if container is serving content
        curl -f http://localhost:3000 || exit 1
        
        # Stop container
        docker stop test-frontend
        docker rm test-frontend

    - name: Upload test coverage
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  accessibility-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application
      run: |
        npm start &
        sleep 30  # Wait for app to start
      env:
        NODE_ENV: production

    - name: Run accessibility tests
      run: |
        npx @axe-core/cli http://localhost:3000 --tags wcag2a,wcag2aa

  security-scan:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Run ESLint security scan
      run: |
        npm install eslint-plugin-security --save-dev
        npx eslint . --ext .js,.jsx,.ts,.tsx --config .eslintrc.security.js || true
